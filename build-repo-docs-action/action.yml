name: 'Build Repository Docs'
description: 'Copies the end-user documentation Markdown (.md) files from the current repository to the vBase documentation repository.'
inputs:
  docs-repo-access-token:
    description: 'The vBase documentation repository access token.'
    required: true
  source-docs-path:
    description: 'The path to the source documentation folder in the current repository. If not set, "docs" will be used.'
    required: false
    default: 'docs'
  target-docs-path:
    description: 'The path to the target documentation files in the vBase documentation repository. If not set, the name of the current repository will be used.'
    required: false
  target-repository:
    description: 'The vBase documentation repository. If not set, "docs" will be used.'
    required: true
    default: 'docs'
runs:
  using: "composite"
  steps:
    - name: Checkout the main docs repository
      uses: actions/checkout@v4
      with:
        repository: volodymyr-bobko/${{ inputs.target-repository }}
        token: ${{ inputs.docs-repo-access-token }}
        path: main-docs

    - uses: actions/github-script@v7
      name: Preprocess plantUml diagrams
      with:
        script: |
          function preprocessMdContent(content) {
            console.log('Preprocessing content' + content);
            return 'PREPROCESSED' + content;
          }

          const fs = require('fs');
          const path = require('path');
          const { execSync } = require('child_process');

          let sourceFolder = "${{ inputs.source-docs-path }}";

          console.log(`Preprocessing plantUml diagrams in "${sourceFolder}"`);

          const files = fs.readdirSync(sourceFolder);
          files.forEach(file => {
              if (file.endsWith('.md')) {
                  let content = fs.readFileSync(path.join(sourceFolder, file), 'utf8');
                  content = preprocessMdContent(content);
                  fs.writeFileSync(path.join(sourceFolder, file), content);
              }
          });

    - uses: actions/github-script@v7
      name: Copy md files to the main docs repo
      with:
        script: |
          const fs = require('fs');
          const path = require('path');

          let sourceFolder = "${{ inputs.source-docs-path }}";
          let targetFolder = "${{ inputs.target-docs-path }}";
          let mainDocsFolder = 'main-docs';

          if (!targetFolder) {
              console.log('No target folder specified. We will use repository name as a default value.');
              targetFolder = context.payload.repository.name;
          }

          targetFolder = path.join(mainDocsFolder, targetFolder);
          console.log(`Copying markdown files from "${sourceFolder}" to "${targetFolder}"`);

          // ensure target folder exists
          if (!fs.existsSync(targetFolder)) {
              fs.mkdirSync(targetFolder, {recursive: true});
          }

          // copy all files recursively
          fs.cp(sourceFolder, targetFolder, {recursive: true}, (err) => {
              console.error(err);
          });

    - name: Pushes the changes to the main docs repository
      uses: cpina/github-action-push-to-another-repository@v1.7.2
      env:
        API_TOKEN_GITHUB: ${{ inputs.docs-repo-access-token }}
      with:
        source-directory: './main-docs'
        destination-github-username: 'volodymyr-bobko'
        destination-repository-name: ${{ inputs.target-repository }}
        user-name: Documents publisher bot
        create-target-branch-if-needed: true
        commit-message: Publishing docs from - ${{ github.sha }}, ${{github.repository}}. Original commit message - ${{ github.event.head_commit.message }}
        target-branch: ${{ github.ref_name  }}

    - name: list current dir contents
      shell: bash
      run: ls -laR ./
