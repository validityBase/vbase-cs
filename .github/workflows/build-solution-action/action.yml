name: 'Build Solution'
description: 'Builds the solution using Visual Studio'
inputs:
  run-tests:
    required: false
    description: 'Run tests after building the solution'
    default: 'true'
  api-key:
    required: false
    description: 'API Key for the tests'
  private-key:
    required: false
    description: 'Private Key for the tests'
runs:
  using: "composite"
  steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
          dotnet-version: 8.0.x

    - name: Restore Dependencies
      shell: ''
      run: dotnet restore

    - name: Run Tests
      if: ${{ inputs.run-tests == 'true' }}
      shell: ''
      run: dotnet test --logger:"console;verbosity=normal"
      env:
        ForwarderUrl: https://dev.api.vbase.com/forwarder
        ApiKey: ${{ inputs.api-key }}
        PrivateKey: ${{ inputs.private-key }}

    # vswhere helps us to find Visual Studio installation path
    - name: Install vswhere
      shell: ''
      run: choco install vswhere
    
    - name: Find Visual Studio and Disable Out of Proc Build
      shell: powershell
      run: |
        # Find Visual Studio installation path
        $vsPath = vswhere -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
        # print $vsPath to the console
        echo "vs-path=$vsPath"
        # change working directory to $vsPath
        Set-Location "$vsPath\Common7\IDE\CommonExtensions\Microsoft\VSI\DisableOutOfProcBuild\"
        # run DisableOutOfProcBuild.exe
        .\DisableOutOfProcBuild.exe

    # Build the solution
    # Note: We are using devenv.com instead of msbuild
    # because the Visual Studio Installer project does not support msbuild
    - name: Build Solution
      shell: powershell
      run: |
        $vsPath = vswhere -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
        Set-Location "$vsPath\Common7\IDE\"
        .\devenv.com vBase.sln /Build "Release"
