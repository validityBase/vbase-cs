name: 'Build Repository Docs'
description: 'Copies the end-user documentation Markdown (.md) files from the current repository to the vBase documentation repository.'
inputs:
  docs-repo-access-token:
    description: 'The vBase documentation repository access token.'
    required: true
  source-docs-path:
    description: 'The path to the source documentation folder in the current repository. If not set, "docs" will be used.'
    required: false
    default: 'docs'
  target-docs-path:
    description: 'The path to the target documentation files in the vBase documentation repository. If not set, the name of the current repository will be used.'
    required: false
  target-repository:
    description: 'The vBase documentation repository. If not set, "validityBase/docs" will be used.'
    required: true
    default: 'validityBase/docs'
  target-repository-branch:
    description: 'The branch of the vBase documentation repository to update. If not set, "main" will be used.'
    required: true
    default: 'main'
runs:
  using: "composite"
  steps:
    - name: Checkout the main docs repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.target-repository }}
        token: ${{ inputs.docs-repo-access-token }}
        path: main-docs

    - uses: actions/github-script@v7
      name: Copy md files to the main docs repo
      with:
        script: |
          const fs = require('fs');
          const path = require('path');

          let sourceFolder = "${{ inputs.source-docs-path }}";
          let targetFolder = "${{ inputs.target-docs-path }}";
          let mainDocsFolder = 'main-docs';

          if (!targetFolder) {
              console.log('No target folder specified. We will use repository name as a default value.');
              targetFolder = context.payload.repository.name;
          }

          targetFolder = path.join(mainDocsFolder, targetFolder);
          console.log(`Copying markdown files from "${sourceFolder}" to "${targetFolder}"`);

          // ensure target folder exists
          if (!fs.existsSync(targetFolder)) {
              fs.mkdirSync(targetFolder, {recursive: true});
          }

          // copy all files recursively
          fs.cp(sourceFolder, targetFolder, {recursive: true}, (err) => {
              console.error(err);
          });


    # - name: Copy md files to the main docs repo
    #   shell: bash
    #   run: |
    #       target_path=${{ inputs.target-docs-path }}
    #       if [ -z "$target_path" ]; then
    #         target_path=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
    #       fi
    #       mkdir -p main-docs/$target_path
    #       cp -r ${{ inputs.source-docs-path }}/* main-docs/$target_path

    - name: list current dir contents
      shell: bash
      run: ls -laR ./
